/////////////////////////////////////////////////////////////////////////////////////////////////
//////                                       Ownership                                     //////
/////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////
//////                                   String Types                                      //////
/////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////
//////                            References and Borrowing                                 //////
/////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////
//////                                    Slice Type                                       //////
/////////////////////////////////////////////////////////////////////////////////////////////////

// complete the below function that should return the first word find in a sentence.
// Assume the sentence is only constituted of the 26 letters of the modern English alphabet and the words are separated by whitespace
// if the sentence has no whitespace this function should return the entire word
pub fn return_first_word(s: &str) -> &str {
    todo!()
}

#[cfg(test)]
mod tests {
    use super::*;

    // Variables, mutability and shadowing
    #[test]
    fn test_return_first_word() {
        let s = String::from("the quick brown fox jumps over the lazy dog");
        assert_eq!("the", return_first_word(&s));
    }
    #[test]
    fn test_return_first_word1() {
        let s = String::from("IAmAVeryVeryVeryReallyVeryVeryLongWord");
        assert_eq!(&s, return_first_word(&s));
    }
}
